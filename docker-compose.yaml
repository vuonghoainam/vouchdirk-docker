version: "3.4"

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-file: "3"
      max-size: "100m"

services:
  dirk1:
    image: attestant/dirk:${DIRK_DOCKER_TAG}
    hostname: dirk1
    restart: unless-stopped
    command: ["--base-dir=/config"]
    ports:
      - 13141/tcp 
    volumes:
      - ./config/dirk1.yml:/config/dirk.yml:ro
      - ./config/certs:/config/certs:ro
      - ./config/passphrases:/config/passphrases:ro
      - ./data/dirk/dirk1:/data
      - ./data/wallets/dirk1/:/tmp/wallets/
    <<: *logging
    networks:
      - lydia_internet_access

  dirk2:
    image: attestant/dirk:${DIRK_DOCKER_TAG}
    hostname: dirk2
    restart: unless-stopped
    command: ["--base-dir=/config"]
    ports:
      - 13141/tcp 
    volumes:
      - ./config/dirk2.yml:/config/dirk.yml:ro
      - ./config/certs:/config/certs:ro
      - ./config/passphrases:/config/passphrases:ro
      - ./data/dirk/dirk2:/data
      - ./data/wallets/dirk2/:/tmp/wallets/
    <<: *logging
    networks:
      - lydia_internet_access

  dirk3:
    image: attestant/dirk:${DIRK_DOCKER_TAG}
    hostname: dirk3
    restart: unless-stopped
    command: ["--base-dir=/config"]
    ports:
      - 13141/tcp 
    volumes:
      - ./config/dirk3.yml:/config/dirk.yml:ro
      - ./config/certs:/config/certs:ro
      - ./config/passphrases:/config/passphrases:ro
      - ./data/dirk/dirk3:/data
      - ./data/wallets/dirk3/:/tmp/wallets/
    <<: *logging
    networks:
      - lydia_internet_access

  dirk4:
    image: attestant/dirk:${DIRK_DOCKER_TAG}
    hostname: dirk4
    restart: unless-stopped
    command: ["--base-dir=/config"]
    ports:
      - 13141/tcp 
    volumes:
      - ./config/dirk4.yml:/config/dirk.yml:ro
      - ./config/certs:/config/certs:ro
      - ./config/passphrases:/config/passphrases:ro
      - ./data/dirk/dirk4:/data
      - ./data/wallets/dirk4/:/tmp/wallets/
    <<: *logging


  dirk5:
    image: attestant/dirk:${DIRK_DOCKER_TAG}
    hostname: dirk5
    restart: unless-stopped
    command: ["--base-dir=/config"]
    ports:
      - 13141/tcp 
    volumes:
      - ./config/dirk5.yml:/config/dirk.yml:ro
      - ./config/certs:/config/certs:ro
      - ./config/passphrases:/config/passphrases:ro
      - ./data/dirk/dirk5:/data
      - ./data/wallets/dirk5/:/tmp/wallets/
    <<: *logging
    networks:
      - lydia_internet_access

  create-wallet:
    profiles: ["tools"]
    image: wealdtech/ethdo:${ETHDO_DOCKER_TAG}
    volumes:
      - ./data/wallets:/data/wallets
    command:
      - --base-dir=/data/wallets
      - wallet
      - create
      - --type=distributed
      - --wallet=${WALLET_NAME}
    networks:
      - lydia_internet_access

  create-accounts:
    profiles: ["tools"]
    image: wealdtech/ethdo:${ETHDO_DOCKER_TAG}
    volumes:
      - ./config/certs:/config/certs:ro
      - ./data/wallets:/data/wallets
    entrypoint: ["/bin/bash","-c"]
    command:
      - |
        set -e
        for (( i=${STARTACCOUNT}; i<=${ENDACCOUNT}; i++ )); do
          /app/ethdo account create \
          --base-dir=/data/wallets \
          --remote=dirk1:13141 \
          --server-ca-cert /config/certs/dirk_authority.crt \
          --client-cert /config/certs/vouch1.crt \
          --client-key /config/certs/vouch1.key \
          --account=${WALLET_NAME}/val-$$i \
          --signing-threshold=3 \
          --participants=5
          echo Created validator account $$i
        done
    networks:
      - lydia_internet_access

  create-depositdata:
    profiles: ["tools"]
    image: wealdtech/ethdo:${ETHDO_DOCKER_TAG}
    volumes:
      - ./data/wallets:/data/wallets
      - ./config/certs:/config/certs:ro
      - ./config/depositdata:/config/depositdata:rw
      - ./config/passphrases:/config/passphrases:ro
    # entrypoint: ["/bin/bash","-c"]
    # command:
    #   - |
    #     set -e
    #     for (( i=${STARTACCOUNT}; i<=${ENDACCOUNT}; i++ )); do
    #       /app/ethdo validator depositdata \
    #       --depositvalue 32Ether \
    #       --remote=dirk1:13141 \
    #       --server-ca-cert /config/certs/dirk_authority.crt \
    #       --client-cert /config/certs/vouch1.crt \
    #       --client-key /config/certs/vouch1.key \
    #       --validatoraccount DistributedWallet/val-$$i \
    #       --launchpad \
    #       --forkversion ${FORK_VERSION} \
    #       --withdrawaladdress ${WITHDRAWAL_ADDRESS} > /config/depositdata/deposit-val-$$i.json
    #       echo Created depositdata for validator $$i
    #     done
    command: "-f /dev/null"
    entrypoint: /usr/bin/tail
    tty: true


  verify-account:
    profiles: ["tools"]
    image: wealdtech/ethdo:${ETHDO_DOCKER_TAG}
    volumes:
      - ./config/certs:/config/certs:ro
      - ./data/wallets:/tmp/wallets
    entrypoint: ["/bin/bash","-c"]
    command:
      - |
        set -e
        account=${WALLET_NAME}/val-1
        echo Verifying one account across five instances
        echo All five should show 3/5 threshold for $$account, and matching
        echo public key and participants. The withdrawal credentials
        echo can be ignored.
        echo
        for host in ${DIRK1} ${DIRK2} ${DIRK3} ${DIRK4} ${DIRK5}; do
          /app/ethdo account info \
          --base-dir=/tmp/wallets \
          --remote=$$host:13141 \
          --server-ca-cert /config/certs/dirk_authority.crt \
          --client-cert /config/certs/vouch1.crt \
          --client-key /config/certs/vouch1.key \
          --account=$$account \
          --verbose
          echo
        done
    networks:
      - lydia_internet_access

  sign-exits:
    profiles: ["tools"]
    image: wealdtech/ethdo:${ETHDO_DOCKER_TAG}
    volumes:
      - ./config/certs:/config/certs:ro
      - ./config/exitmessages:/config/exitmessages:rw
    entrypoint: ["/bin/bash","-c"]
    command:
      - |
        set -e
        apt-get update && apt-get install -y jq
        for (( i=${STARTACCOUNT}; i<=${ENDACCOUNT}; i++ )); do
          /app/ethdo validator exit \
          --json \
          --remote=${DIRK1}:13141 \
          --server-ca-cert /config/certs/dirk_authority.crt \
          --client-cert /config/certs/vouch${VOUCH_INSTANCE}.crt \
          --client-key /config/certs/vouch${VOUCH_INSTANCE}.key \
          --account=${WALLET_NAME}/val-$$i \
          --connection=${CL1} >/config/exitmessages/exit-operation.json
          echo Signed exit for validator account $$i
          __index=$(jq -r .message.validator_index </config/exitmessages/exit-operation.json)
          mv /config/exitmessages/exit-operation.json /config/exitmessages/$$__index-exit.json
        done
        echo Please run \"docker-compose run --rm encrypt-exits\" next.
        echo They\'ll be in ./config/exits afterwards, encrypted with the password in .env
        echo Please remember to delete the unencrypted files in ./config/exitmessages
    networks:
      - lydia_internet_access

  encrypt-exits:
    profiles: ["tools"]
    image: lidofinance/validator-ejector:dev
    volumes:
      - ./config/exitmessages:/app/encryptor/input/:ro
      - ./config/exits:/app/encryptor/output/:rw
    environment:
      - MESSAGES_PASSWORD=${EXIT_PASSPHRASE}
    user: root
    command: [ "node", "/app/dist/encryptor/encrypt.js"]

  export-keys:
    profiles: ["tools"]
    image: wealdtech/ethdo:${ETHDO_DOCKER_TAG}
    volumes:
      - ./config/certs:/config/certs:ro
      - ./keys:/app/keys
      - ./data/dirk/export:/data
    entrypoint: ["/bin/bash","-c"]
    command:
      - |
        set -e
        while true; do
            read -srp "What is the passphrase to encrypt the backup? : " __passphrase
            echo
            read -srp "Please verify the passphrase : " __passphrase2
            if [[ $${__passphrase} = $${__passphrase2} ]]; then
                break
            else
                echo "Passphrase did not match. You can try again or hit Enter twice to abort."
            fi
        done
        echo Backing up local wallet. Please make sure to run this on all five Dirks!
        echo Backup can be found in ./keys/dirk${DIRK_INSTANCE}-export.dat
        echo
        /app/ethdo wallet export \
        --base-dir=/data/wallets \
        --wallet=${WALLET_NAME} \
        --passphrase=$${__passphrase} \
        > /app/keys/dirk${DIRK_INSTANCE}-export.dat
        echo
    networks:
      - lydia_internet_access

  jaeger:
    hostname: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831"
      - "16686:16686"
    networks:
      - lydia_internet_access

  vouch1:
    image: attestant/vouch:${VOUCH_DOCKER_TAG}
    hostname: vouch1-${MEV_HOST}
    restart: unless-stopped
    command: ["--base-dir=/config"]
    volumes:
      - ./config/vouch1.yml:/config/vouch.yml:ro
      - ./config/vouch-ee.json:/config/vouch-ee.json:ro
      - ./config/certs:/config/certs:ro
    ports:
      - 12345:12345/tcp
    <<: *logging
    networks:
      - lydia_internet_access

  vouch2:
    image: attestant/vouch:${VOUCH_DOCKER_TAG}
    hostname: vouch2-${MEV_HOST}
    restart: unless-stopped
    command: ["--base-dir=/config"]
    volumes:
      - ./config/vouch2.yml:/config/vouch.yml:ro
      - ./config/vouch-ee.json:/config/vouch-ee.json:ro
      - ./config/certs:/config/certs:ro
    ports:
      - 12346:12345/tcp
    <<: *logging
    networks:
      - lydia_internet_access

networks:
  lydia_internet_access:
    name: lydia_internet_access
    external: true